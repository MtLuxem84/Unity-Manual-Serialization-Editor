// AutoGenerated: 7/27/2022 6:46:36 AM
[System.Serializable]
public class ExampleMessageData
{
     public ushort Id;
     public uint tick_number;
     public byte Type;
     public short ArraySize;
     public byte[] Bytes;
    /// <summary>
    /// Size: 9
    /// </summary>
    public void Write(ExampleMessageData data, byte [] b, ref int pos)
    {
        b[pos++] = (byte)data.Id;
        b[pos++] = (byte)(data.Id >> 8);

        b[pos++] = (byte)data.tick_number;
        b[pos++] = (byte)(data.tick_number >> 8);
        b[pos++] = (byte)(data.tick_number >> 16);
        b[pos++] = (byte)(data.tick_number >> 24);

        b[pos++] = (byte)data.Type;
        b[pos++] = (byte)data.ArraySize;
        b[pos++] = (byte)(data.ArraySize >> 8);

        if (data.Bytes.Length > 0)
        System.Buffer.BlockCopy(data.Bytes, 0, b, pos, data.Bytes.Length);
        pos += data.Bytes.Length;
}
    /// <summary>
    /// Size: 9
    /// </summary>
public void Read(byte [] b, ref int pos)
{
        Id = (ushort)((b[pos++] << 0) | (b[pos++] << 8));
        tick_number = (uint)((b[pos++] << 0) | (b[pos++] << 8)| (b[pos++] << 16)| (b[pos++] << 24));
        Type = (b[pos++]); 
        ArraySize = (short)((b[pos++] << 0) | (b[pos++] << 8));
        if (ArraySize > 0)
        System.Buffer.BlockCopy(b, pos, Bytes, 0, ArraySize); 
        pos += ArraySize;
}
}
[System.Serializable]
public class ExampleInputData
{
     public float moveX;
     public float moveY;
     public float qX;
     public float qY;
     public float qZ;
     public float qW;
     public float dt;
     public bool fire;
     public bool jump;
    /// <summary>
    /// Size: 30
    /// </summary>
    public void Write(ExampleInputData data, byte [] b, ref int pos)
    {
        MNFloat.Write(ref b, ref pos, data.moveX);
        MNFloat.Write(ref b, ref pos, data.moveY);
        MNFloat.Write(ref b, ref pos, data.qX);
        MNFloat.Write(ref b, ref pos, data.qY);
        MNFloat.Write(ref b, ref pos, data.qZ);
        MNFloat.Write(ref b, ref pos, data.qW);
        MNFloat.Write(ref b, ref pos, data.dt);
        b[pos++] = (byte)(data.fire ? 1 : 0);
        b[pos++] = (byte)(data.jump ? 1 : 0);
}
    /// <summary>
    /// Size: 30
    /// </summary>
public void Read(byte [] b, ref int pos)
{
        moveX = MNFloat.Read(b, ref pos);
        moveY = MNFloat.Read(b, ref pos);
        qX = MNFloat.Read(b, ref pos);
        qY = MNFloat.Read(b, ref pos);
        qZ = MNFloat.Read(b, ref pos);
        qW = MNFloat.Read(b, ref pos);
        dt = MNFloat.Read(b, ref pos);
        fire = (b[pos++] != 0); 
        jump = (b[pos++] != 0); 
}
}
[System.Serializable]
public class ExampleObjectStateData
{
     public uint UID;
     public byte Type;
     public float PosX;
     public float PosY;
     public float PosZ;
     public float RotX;
     public float RotY;
     public float RotZ;
    /// <summary>
    /// Size: 29
    /// </summary>
    public void Write(ExampleObjectStateData data, byte [] b, ref int pos)
    {
        b[pos++] = (byte)data.UID;
        b[pos++] = (byte)(data.UID >> 8);
        b[pos++] = (byte)(data.UID >> 16);
        b[pos++] = (byte)(data.UID >> 24);

        b[pos++] = (byte)data.Type;
        MNFloat.Write(ref b, ref pos, data.PosX);
        MNFloat.Write(ref b, ref pos, data.PosY);
        MNFloat.Write(ref b, ref pos, data.PosZ);
        MNFloat.Write(ref b, ref pos, data.RotX);
        MNFloat.Write(ref b, ref pos, data.RotY);
        MNFloat.Write(ref b, ref pos, data.RotZ);
}
    /// <summary>
    /// Size: 29
    /// </summary>
public void Read(byte [] b, ref int pos)
{
        UID = (uint)((b[pos++] << 0) | (b[pos++] << 8)| (b[pos++] << 16)| (b[pos++] << 24));
        Type = (b[pos++]); 
        PosX = MNFloat.Read(b, ref pos);
        PosY = MNFloat.Read(b, ref pos);
        PosZ = MNFloat.Read(b, ref pos);
        RotX = MNFloat.Read(b, ref pos);
        RotY = MNFloat.Read(b, ref pos);
        RotZ = MNFloat.Read(b, ref pos);
}
}
